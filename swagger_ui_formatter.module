<?php

/**
 * @file
 * Main module file for Swagger UI Field Formatter.
 */

use Drupal\Component\Serialization\Json;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_theme().
 */
function swagger_ui_formatter_theme($existing, $type, $theme, $path) {
  return [
    'swagger_ui_field_item' => [
      'variables' => [
        'field_name' => NULL,
        'delta' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_library_info_build().
 */
function swagger_ui_formatter_library_info_build() {
  $libraries = [];
  if ($library_path = _swagger_ui_formatter_get_library_path()) {
    // Library definition for required Swagger UI files.
    $libraries['swagger_ui_formatter.swagger_ui'] = [
      'version' => _swagger_ui_formatter_get_library_version(),
      'css' => [
        'theme' => [
          $library_path . '/dist/swagger-ui.css' => ['minified' => TRUE],
        ],
      ],
      'js' => [
        $library_path . '/dist/swagger-ui-bundle.js' => ['minified' => TRUE],
        $library_path . '/dist/swagger-ui-standalone-preset.js' => ['minified' => TRUE],
      ],
    ];
    // Library definition for Swagger UI integration.
    $libraries['swagger_ui_formatter.swagger_ui_integration'] = [
      'version' => '1.0',
      'js' => [
        'js/swagger-ui-formatter.js' => [],
      ],
      'dependencies' => [
        'core/jquery',
        'core/drupal',
        'core/drupalSettings',
      ],
    ];
  }

  return $libraries;
}

/**
 * Helper function to determine the Swagger UI library path.
 *
 * @return string|bool
 *   Returns the library path or FALSE if the library is not found.
 */
function _swagger_ui_formatter_get_library_path() {
  $cid = 'swagger_ui_formatter:library_path';
  if ($cache = \Drupal::cache()->get($cid)) {
    return $cache->data;
  }
  else {
    foreach (['/libraries/swagger-ui', '/libraries/swagger_ui'] as $library_dir) {
      if (_swagger_ui_formatter_is_library_directory($library_dir)) {
        \Drupal::cache()->set($cid, $library_dir);
        return $library_dir;
      }
    }
    return FALSE;
  }
}

/**
 * Helper function to check where the Swagger UI library is installed.
 *
 * @param string $library_dir
 *   The directory name which contains the Swagger UI library.
 *
 * @return bool
 *   Returns TRUE if the Swagger UI library is installed under the given
 *   directory. Returns FALSE otherwise.
 */
function _swagger_ui_formatter_is_library_directory($library_dir) {
  $files_to_check = [
    'package.json',
    'dist/swagger-ui.css',
    'dist/swagger-ui-bundle.js',
    'dist/swagger-ui-standalone-preset.js',
  ];
  foreach ($files_to_check as $file) {
    if (!file_exists(DRUPAL_ROOT . $library_dir. '/' . $file)) {
      return FALSE;
    }
  }
  return TRUE;
}

/**
 * Gets Swagger UI library version information.
 *
 * @return string
 *   The library version or an empty string if the version cannot be determined.
 */
function _swagger_ui_formatter_get_library_version() {
  if ($library_path = _swagger_ui_formatter_get_library_path()) {
    $file = DRUPAL_ROOT . $library_path . '/package.json';
    if (!file_exists($file)) {
      return '';
    }

    $content = file_get_contents($file);
    if (!$content) {
      return '';
    }

    $data = Json::decode($content);
    if (isset($data['version'])) {
      return $data['version'];
    }
  }

  return '';
}

/**
 * Implements hook_help().
 */
function swagger_ui_formatter_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.swagger_ui_formatter':
      $readme = file_get_contents(__DIR__ . '/README.txt');
      $output = '';

      // If the Markdown module is installed, use it to render the README.
      if ($readme && (\Drupal::moduleHandler()->moduleExists('markdown') === TRUE)) {
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $filter = $filter_manager->createInstance('markdown', ['settings' => $settings]);
        $output = $filter->process($readme, 'en');
      } // Else the Markdown module is not installed output the README as text.
      else if ($readme) {
        $output = '<pre>' . $readme . '</pre>';
      }

      // Add a link to the Drupal.org project.
      $output .= '<p>';
      $output .= t('Visit the <a href=":project_link">project page</a> on Drupal.org for more information.', [
        ':project_link' => 'https://www.drupal.org/project/swagger_ui_formatter'
      ]);
      $output .= '</p>';

      return $output;
  }
}
